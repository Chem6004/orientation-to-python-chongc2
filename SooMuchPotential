import numpy as np
from matplotlib import pyplot as plt
from scipy.interpolate import InterpolatedUnivariateSpline

### create an array of 20 bond lengths spanning 0.5 - 3.5 angstroms
### but store in atomic units of length... note 1 angstrom = 1.88973 a.u. of length
r_array = np.linspace(0.561,3.087,10)*1.88973
print(r_array)

### fill in this array with your actual energy values... there should be 20 values in total!!!
Bondlength_array = [0.944865,1.24324342,1.54162184,1.84000026,2.13837868,2.43675711,2.73513553,
                    3.03351395,3.33189237,3.63027079,3.92864921,4.22702763,4.52540605,4.82378447,
                    5.12216289,5.42054132,5.71891974,6.01729816,6.31567658,6.614055]

E_array = [-107.1389493226,-110.8762342308,-112.2035650482,-112.6221628016,
           -112.6993448642, -112.6532021548,-112.5695515418, -112.4825450847, -112.4093307577,
           -112.3611216888, -112.3328706063, -112.3154788092, -112.3040496673, -112.0685479896, 
           -112.2907699794, -112.2869226228, -112.0012243902, -111.9483767861, -111.927401279,
           -112.2798664306]

plt.plot(Bondlength_array, E_array, 'blue')
plt.plot(Bondlength_array,E_array, label = "Energy")

plt.xlabel('Bond Length')
plt.ylabel('Energy')
plt.title('Bond Length vs Energy')

plt.legend()
plt.show()

### use cubic spline interpolation
order = 3
### form the interpolator object for the data
sE = InterpolatedUnivariateSpline(Bondlength_array, E_array, k=order)
### form a much finer grid
r_fine = np.linspace(1.06,5.0,200)
### compute the interpolated/extrapolated values for E on this grid
E_fine = sE(r_fine)
### plot the interpolated data
plt.plot(r_fine, E_fine, 'blue')
plt.show()

### take the derivative of potential
fE = sE.derivative()
### force is the negative of the derivative
F_fine = -1*fE(r_fine)

### plot the forces
plt.plot(r_fine, np.abs(F_fine), 'black')
plt.xlim(1,5)
plt.show()

### Find index of the PES where it has its global minimum
r_eq_idx = np.argmin(E_fine)
### find the value of the separation corresponding to that index
r_eq = r_fine[r_eq_idx]
### print equilibrium bond-length in atomic units and in angstroms
print("Equilibrium bond length is ",r_eq," atomic units")
print("Equilibrium bond length is ",r_eq*0.529," Angstroms")



